{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro/Cadastro_Tombamento.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro/Cadastro_Tombamento.vue","mtime":1577281246476},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport swal from \"sweetalert2\";\n\nexport default {\n  name: \"Cadastro_Tombamento\",\n  data() {\n    return {\n      autorizacao: false,\n      dialog: false,\n      tombamento: \"\",\n      mask_tombamento: \"####\",\n      rules: [v => !!v || \"Este Campo é obrigatório\"]\n    };\n  },\n  created() {},\n\n  methods: {\n    get_Tombos() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        if(this.tombamento != '' && this.tombamento.length == 4){\n\n        \n        //console.log(\"entrou no cadastro\");\n        this.$http\n          .post(\n            this.$url + \"TombamentoInstrumento/v1\",\n            {\n              id: 0,\n              Numero: this.tombamento,\n              Status: 1,\n              launchDate: new Date().toISOString().substr(0, 16)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              this.dialog = false;\n              swal.fire({\n                type: \"success\",\n                title: \"Salvo com sucesso\",\n                text:\n                  \"O numero de tombamento \" +\n                  response.data.numero +\n                  \" já se encontra disponível para seleção!\"\n              });\n              this.$emit(\"tombamentos\");\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            //estar pegando apenas o erro de dados duplicado quando tenta salvar na api e dar erro 500\n            swal.fire(\n              \"Esse numero de tombamento já existe !\",\n              \"Escolha outro.\",\n              \"warning\"\n            );\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }else{\n          swal.fire(\n              \"Desculpe...\",\n              \"Mas o numero de tombamento não pode estar em branco.\",\n              \"warning\"\n            );\n      }\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Cadastro_Tombamento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cadastro_Tombamento.vue","sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n    <v-btn flat slot=\"activator\"  color=\"blue darken-4\">\n     Tombamento\n    </v-btn>\n    <v-card>\n      <v-flex xs12 sm12 md12 lg12>\n        <div class=\"pt-3\">\n          <v-btn\n            right\n            class=\"white--text\"\n            small\n            fab\n            round            \n            color=\"red darken-1\"\n            absolute\n            v-on:click=\"dialog = false\"\n          >\n            <v-icon>close</v-icon>\n          </v-btn>\n        </div>\n      </v-flex>\n      <v-flex xs12 sm12 md12 lg12 d-flex class=\"pt-5\" align-center>\n        <v-card-title class=\"headline blue--text text--darken-4\">Tombamento do instrumento</v-card-title>\n      </v-flex>\n      <v-card-text>\n        <v-text-field\n          v-model=\"tombamento\"\n          placeholder=\"Ex. 0001 ...\"\n          :mask=\"mask_tombamento\"          \n          :rules=\"rules\"\n          :counter=\"4\"\n          label=\"Nº Tombamento\"\n          color=\"blue darken-4\"\n          required\n        ></v-text-field>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-flex xs12 sm12 md12 lg12 align-center>\n          <v-btn\n            color=\"green darken-4\"            \n            outline\n            v-on:click=\"get_Tombos\"\n            @click=\"dialog = false\"\n          >Salvar Tombamento</v-btn>\n        </v-flex>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script type=\"text/babel\">\nimport swal from \"sweetalert2\";\n\nexport default {\n  name: \"Cadastro_Tombamento\",\n  data() {\n    return {\n      autorizacao: false,\n      dialog: false,\n      tombamento: \"\",\n      mask_tombamento: \"####\",\n      rules: [v => !!v || \"Este Campo é obrigatório\"]\n    };\n  },\n  created() {},\n\n  methods: {\n    get_Tombos() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        if(this.tombamento != '' && this.tombamento.length == 4){\n\n        \n        //console.log(\"entrou no cadastro\");\n        this.$http\n          .post(\n            this.$url + \"TombamentoInstrumento/v1\",\n            {\n              id: 0,\n              Numero: this.tombamento,\n              Status: 1,\n              launchDate: new Date().toISOString().substr(0, 16)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              this.dialog = false;\n              swal.fire({\n                type: \"success\",\n                title: \"Salvo com sucesso\",\n                text:\n                  \"O numero de tombamento \" +\n                  response.data.numero +\n                  \" já se encontra disponível para seleção!\"\n              });\n              this.$emit(\"tombamentos\");\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            //estar pegando apenas o erro de dados duplicado quando tenta salvar na api e dar erro 500\n            swal.fire(\n              \"Esse numero de tombamento já existe !\",\n              \"Escolha outro.\",\n              \"warning\"\n            );\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }else{\n          swal.fire(\n              \"Desculpe...\",\n              \"Mas o numero de tombamento não pode estar em branco.\",\n              \"warning\"\n            );\n      }\n      }\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}