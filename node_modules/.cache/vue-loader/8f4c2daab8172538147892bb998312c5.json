{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro/Cadastro_Nome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro/Cadastro_Nome.vue","mtime":1569691366103},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport swal from \"sweetalert2\";\n\nexport default {\n  name: \"Cadastro_Nome\",\n  data() {\n    return {\n      autorizacao: false,\n      dialog: false,\n      nome: \"\",\n      naipe: \"\",\n      naipes: [\"Cordas\", \"Madeiras\", \"Metais\"],\n      rules: [\n        v => !!v || \"Nome é obrigatório\",\n        v =>\n          /[A-Z][a-z]+/.test(v) ||\n          \"A primeita letra deve ser maiuscula e ter no mínimo 2 letras\"\n      ],\n      naipe_rules: [v => !!v || \"Naipe é obrigatório\"]\n    };\n  },\n  created() {},\n\n  methods: {\n    get_Nomes() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        if(this.nome != ''){\n        //console.log(\"entrou no cadastro\");\n        this.$http\n          .post(\n            this.$url + \"NomeInstrumento/v1\",\n            {\n              id: 0,\n              Nome: this.nome,\n              Naipe: this.naipe,\n              launchDate: new Date().toISOString().substr(0, 16)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              this.dialog = false;\n              swal.fire({\n                type: \"success\",\n                title: \"Salvo com sucesso\",\n                text:\n                  \"O nome \" +\n                  this.nome +\n                  \" já se encontra disponível para seleção!\"\n              });\n              this.$emit(\"nomes\");\n            } else if (response.status == 401) {\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            //estar pegando apenas o erro de dados duplicado quando tenta salvar na api e dar erro 500\n            swal.fire(\"Esse nome já existe !\", \"Escolha outro.\", \"warning\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n          }else{\n             swal.fire(\"Desculpe...\", \"O nome não pode estar em branco\", \"warning\");\n          }\n      }\n    }\n  }\n};\n",{"version":3,"sources":["Cadastro_Nome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Cadastro_Nome.vue","sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Instrumento/Cadastro","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n    <v-btn outline slot=\"activator\" fab dark small color=\"teal darken-3\">\n      <v-icon dark>add</v-icon>\n    </v-btn>\n    <v-card>\n      <div classe=\"row\">\n        <v-flex xs12 sm12 md12 lg12>\n          <div class=\"pt-3\">\n            <v-btn\n              right\n              class=\"white--text\"\n              small\n              fab\n              round\n              outline\n              color=\"red darken-1\"\n              absolute\n              v-on:click=\"dialog = false\"\n            >\n              <v-icon>close</v-icon>\n            </v-btn>\n          </div>\n        </v-flex>\n      </div>\n      <v-flex xs12 sm12 md12 lg12 d-flex class=\"pt-5 pl-2\" align-center>\n        <v-card-title class=\"headline teal--text text--darken-3\">Nome do instrumento</v-card-title>\n      </v-flex>\n      <v-card-text>\n        <v-text-field\n          v-model=\"nome\"\n          :rules=\"rules\"\n          :counter=\"10\"\n          label=\"Nome\"\n          color=\"teal darken-2\"\n          outline\n          placeholder=\"Ex. Violino ...\"\n          required\n        ></v-text-field>\n        <v-flex xs12 sm12 md12>\n          <v-select\n            :items=\"naipes\"\n            :rules=\"naipe_rules\"\n            outline\n            placeholder=\"Ex. Cordas ...\"\n            color=\"teal darken-3\"\n            label=\"Naipe\"\n            v-model=\"naipe\"\n          ></v-select>\n        </v-flex>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer></v-spacer>\n        <v-flex xs12 sm12 md12 lg12 align-center>\n          <v-btn\n            color=\"teal darken-3\"\n            center\n            outline\n            round\n            v-on:click=\"get_Nomes\"\n            @click=\"dialog = false\"\n          >Salvar</v-btn>\n        </v-flex>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script type=\"text/babel\">\nimport swal from \"sweetalert2\";\n\nexport default {\n  name: \"Cadastro_Nome\",\n  data() {\n    return {\n      autorizacao: false,\n      dialog: false,\n      nome: \"\",\n      naipe: \"\",\n      naipes: [\"Cordas\", \"Madeiras\", \"Metais\"],\n      rules: [\n        v => !!v || \"Nome é obrigatório\",\n        v =>\n          /[A-Z][a-z]+/.test(v) ||\n          \"A primeita letra deve ser maiuscula e ter no mínimo 2 letras\"\n      ],\n      naipe_rules: [v => !!v || \"Naipe é obrigatório\"]\n    };\n  },\n  created() {},\n\n  methods: {\n    get_Nomes() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        if(this.nome != ''){\n        //console.log(\"entrou no cadastro\");\n        this.$http\n          .post(\n            this.$url + \"NomeInstrumento/v1\",\n            {\n              id: 0,\n              Nome: this.nome,\n              Naipe: this.naipe,\n              launchDate: new Date().toISOString().substr(0, 16)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              this.dialog = false;\n              swal.fire({\n                type: \"success\",\n                title: \"Salvo com sucesso\",\n                text:\n                  \"O nome \" +\n                  this.nome +\n                  \" já se encontra disponível para seleção!\"\n              });\n              this.$emit(\"nomes\");\n            } else if (response.status == 401) {\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            //estar pegando apenas o erro de dados duplicado quando tenta salvar na api e dar erro 500\n            swal.fire(\"Esse nome já existe !\", \"Escolha outro.\", \"warning\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n          }else{\n             swal.fire(\"Desculpe...\", \"O nome não pode estar em branco\", \"warning\");\n          }\n      }\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}