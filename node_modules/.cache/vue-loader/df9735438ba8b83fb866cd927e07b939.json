{"remainingRequest":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/sigadm-team/sigadm-web/src/pages/Modulos/Patrimonio/Instrumento/Cadastros/CadastroNotaFiscalP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/src/pages/Modulos/Patrimonio/Instrumento/Cadastros/CadastroNotaFiscalP.vue","mtime":1577225230000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// Import FilePond\nimport vueFilePond from \"vue-filepond\";\n\n// Import plugins\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.esm.js\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport swal from \"sweetalert2\";\n\n// Import styles\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\n\n// Create FilePond component\nconst FilePond = vueFilePond(\n  FilePondPluginFileValidateType,\n  FilePondPluginImagePreview,\n  FilePondPluginFileRename\n);\n\nexport default {\n  props: [\"numero_tombamento\"],\n  name: \"cadastronota\",\n  data: function() {\n    return { myFiles: [], arquivos: [], tipo: [\"application/pdf\"] };\n  },\n  methods: {\n    Salvar(){\n      ////console.log(\"Salvar nota fiscal\")\n      this.$emit(\"SalvarCompra\");\n    },\n    handleFilePondInit: function() {\n      //console.log(\"FilePond has initialized\");\n\n      // example of instance method call on pond reference\n      //console.log(this.$refs.pond.getFiles());\n      this.arquivos = this.$refs.pond.getFiles();\n      //console.log(JSON.stringify(this.arquivos.values()));\n      if (JSON.stringify(this.arquivos.values()) == \"{}\") {\n        swal.fire(\n          \"Atenção!\",\n          \"Precisa anexar a nota fiscal primeiro!\",\n          \"warning\"\n        );\n      }\n      this.arquivos.forEach(element => {\n        //console.log(element.file);\n        let formData = new FormData();\n        //console.log(\"numero\", this.numero_tombamento);\n        if (this.numero_tombamento == \"\") {\n          swal.fire(\n            \"Atenção!\",\n            \"O numero de tombamento precisa estar selecionado!\",\n            \"warning\"\n          );\n        } else {\n          formData.append(\n            \"file\",\n            element.file,\n            this.numero_tombamento + \"-\" + element.filename\n          );\n          //console.log(\"EXTESAO DO ARQUIVO TESTE: \", element.fileExtension);\n          //console.log( \"NOME SEM EXTENSAO DO ARQUIVO TESTE: \",   element.filenameWithoutExtension     );\n        }\n        //console.log(formData.getAll(\"file\"));\n\n        let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n        if (autorizacaoAux && this.numero_tombamento != \"\") {\n          this.autorizacao = JSON.parse(autorizacaoAux);\n          //console.log(\"entrou no anexar nota fiscal\");\n          this.$http\n            .post(\n              this.$url + \"CompraInstrumento/v1/salvar-notafiscal-instrumento\",\n              formData,\n              {\n                headers: {\n                  authorization: \"Bearer \" + this.autorizacao.accessToken\n                }\n              }\n            )\n            .then(response => {\n              if (response.status == 200) {\n                this.dialog = false;\n                swal.fire({\n                  type: \"success\",\n                  title: \"Anexado com sucesso\",\n                  text:\n                    \"Anexe novamente outro documento para substituir esse, se necessário..\"\n                });\n                //console.log(response.data);\n                this.$emit(\"path_nota\", { path: response.data });\n                this.$emit(\"cadastrarCompra\");\n              } else if (response.status == 401) {\n              } else if (response.status == 500) {\n              }\n              ////console.log(response.data);\n            })\n            .catch(e => {\n              swal.fire(\n                \"Sua autorização expirou!\",\n                \"Entre com suas credencias novamente.\",\n                \"warning\"\n              );\n              this.$router.push(\"/\");\n              //console.error(e);\n              //console.data(e.data);\n            });\n        }\n      });\n    }\n  },\n  components: {\n    FilePond\n  }\n};\n",{"version":3,"sources":["CadastroNotaFiscalP.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"CadastroNotaFiscalP.vue","sourceRoot":"src/pages/Modulos/Patrimonio/Instrumento/Cadastros","sourcesContent":["<template>\n  <v-layout>\n    <v-flex xs12 sm12 md4 lg4 offset-md4 offset-lg4>\n      <v-layout>\n        <v-flex xs12 sm12>\n          <v-hover>\n            <v-card slot-scope=\"{ hover }\" :class=\"`elevation-${hover ? 12 : 2}`\" class=\"mx-auto\">\n              <v-card-title primary-title>\n                <div>\n                  <h3 class=\"subheading text-uppercase mb-0\">NOTA FISCAL</h3>\n                </div>\n              </v-card-title>\n              <v-card-text>\n                <span id=\"cadastrotermos\">\n                  <file-pond\n                    style=\"cursor:pointer\"\n                    name=\"test\"\n                    ref=\"pond\"\n                    class-name=\"my-pond\"\n                    label-idle=\"Anexar aqui\"\n                    :accepted-file-types=\"tipo\"\n                    v-bind:files=\"myFiles\"\n                    labelFileTypeNotAllowed=\"NÃO ACEITO\"\n                    fileValidateTypeLabelExpectedTypes=\"É esperado um PDF\"\n                  ></file-pond>\n                </span>\n              </v-card-text>\n            </v-card>\n          </v-hover>\n        </v-flex>\n      </v-layout>\n      <!--\n    <v-flex xs12 sm12 md12 lg12 align-center>\n      <v-btn        \n        color=\"green darken-4\"\n        dark\n        v-on:click=\"handleFilePondInit\"\n      >\n        SALVAR INSTRUMENTO\n      </v-btn>\n      </v-flex>-->\n      <v-flex xs12 sm12 md12 lg12 align-center>\n        <v-btn color=\"green darken-4\" dark @click=\"Salvar\">SALVAR INSTRUMENTO</v-btn>\n      </v-flex>\n    </v-flex>\n  </v-layout>\n</template>  \n  <script>\n// Import FilePond\nimport vueFilePond from \"vue-filepond\";\n\n// Import plugins\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type/dist/filepond-plugin-file-validate-type.esm.js\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.esm.js\";\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\nimport swal from \"sweetalert2\";\n\n// Import styles\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\n\n// Create FilePond component\nconst FilePond = vueFilePond(\n  FilePondPluginFileValidateType,\n  FilePondPluginImagePreview,\n  FilePondPluginFileRename\n);\n\nexport default {\n  props: [\"numero_tombamento\"],\n  name: \"cadastronota\",\n  data: function() {\n    return { myFiles: [], arquivos: [], tipo: [\"application/pdf\"] };\n  },\n  methods: {\n    Salvar(){\n      ////console.log(\"Salvar nota fiscal\")\n      this.$emit(\"SalvarCompra\");\n    },\n    handleFilePondInit: function() {\n      //console.log(\"FilePond has initialized\");\n\n      // example of instance method call on pond reference\n      //console.log(this.$refs.pond.getFiles());\n      this.arquivos = this.$refs.pond.getFiles();\n      //console.log(JSON.stringify(this.arquivos.values()));\n      if (JSON.stringify(this.arquivos.values()) == \"{}\") {\n        swal.fire(\n          \"Atenção!\",\n          \"Precisa anexar a nota fiscal primeiro!\",\n          \"warning\"\n        );\n      }\n      this.arquivos.forEach(element => {\n        //console.log(element.file);\n        let formData = new FormData();\n        //console.log(\"numero\", this.numero_tombamento);\n        if (this.numero_tombamento == \"\") {\n          swal.fire(\n            \"Atenção!\",\n            \"O numero de tombamento precisa estar selecionado!\",\n            \"warning\"\n          );\n        } else {\n          formData.append(\n            \"file\",\n            element.file,\n            this.numero_tombamento + \"-\" + element.filename\n          );\n          //console.log(\"EXTESAO DO ARQUIVO TESTE: \", element.fileExtension);\n          //console.log( \"NOME SEM EXTENSAO DO ARQUIVO TESTE: \",   element.filenameWithoutExtension     );\n        }\n        //console.log(formData.getAll(\"file\"));\n\n        let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n        if (autorizacaoAux && this.numero_tombamento != \"\") {\n          this.autorizacao = JSON.parse(autorizacaoAux);\n          //console.log(\"entrou no anexar nota fiscal\");\n          this.$http\n            .post(\n              this.$url + \"CompraInstrumento/v1/salvar-notafiscal-instrumento\",\n              formData,\n              {\n                headers: {\n                  authorization: \"Bearer \" + this.autorizacao.accessToken\n                }\n              }\n            )\n            .then(response => {\n              if (response.status == 200) {\n                this.dialog = false;\n                swal.fire({\n                  type: \"success\",\n                  title: \"Anexado com sucesso\",\n                  text:\n                    \"Anexe novamente outro documento para substituir esse, se necessário..\"\n                });\n                //console.log(response.data);\n                this.$emit(\"path_nota\", { path: response.data });\n                this.$emit(\"cadastrarCompra\");\n              } else if (response.status == 401) {\n              } else if (response.status == 500) {\n              }\n              ////console.log(response.data);\n            })\n            .catch(e => {\n              swal.fire(\n                \"Sua autorização expirou!\",\n                \"Entre com suas credencias novamente.\",\n                \"warning\"\n              );\n              this.$router.push(\"/\");\n              //console.error(e);\n              //console.data(e.data);\n            });\n        }\n      });\n    }\n  },\n  components: {\n    FilePond\n  }\n};\n</script>\n  <style  type=\"text/css\">\n/* the text color of the drop label*/\n.filepond--drop-label {\n  color: white;\n}\n.filepond--panel-root {\n  background-color: rgb(54, 64, 119);\n}\n</style>\n  \n  "]}]}