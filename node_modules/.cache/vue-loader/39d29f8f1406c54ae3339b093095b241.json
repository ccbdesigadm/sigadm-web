{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Compra_sem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Compra_sem.vue","mtime":1569691366099},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport swal from \"sweetalert2\";\nimport CadEmpresa from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Empresa\";\nimport CadNotap from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/NotaFiscal/CadastroNotaFiscalP\";\nimport { VMoney } from \"v-money\";\n\nexport default {\n  name: \"Cadastro_Empresa\",\n  components: {\n    CadEmpresa,\n    CadNotap\n  },\n  props: [\"numero_do_instrumento\"],\n  data() {\n    return {\n      money: {\n        decimal: \",\",\n        thousands: \".\",\n        prefix: \"R$ \",\n        suffix: \"\",\n        precision: 2,\n        masked: false /* doesn't work with directive */\n      },\n      com_data: true,\n      com_nota: true,\n      descriçao_sem_nota: \"sem nota fiscal.\",\n      dialog_compra: \"\",\n      modal_compra: false,\n      data_compra: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      observacao_instrumento: \"\",\n      dialog: false,\n      empresas: [],\n      empresa: \"\",\n      nota_sem_definicao: \"\",\n      nota_fiscal: \"\",\n      preco_instrumento: 0.0,\n      data_compra: new Date().toISOString().substr(0, 10),\n      tombamento: \"\",\n      path_nota: \"\",\n      hint_nota: \"\"\n    };\n  },\n  directives: { money: VMoney },\n  created() {\n    this.AtualizarEmpresas();\n  },\n\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.data_compra);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.data_compra);\n    }\n  },\n  methods: {\n    NotaPath(payload) {\n      this.nota_path = payload.path;\n      ////console.log(this.nota_path.dbPath);\n      this.tombamento = this.numero_do_instrumento;\n    },\n    CadastrarCompra() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      ////console.log(this.com_nota);\n      if (\n        (autorizacaoAux &&\n          this.com_nota == true &&\n          this.numero_do_instrumento != \"\" &&\n          this.nota_fiscal,\n        this.empresa != \"\" && this.data_compra != \"\")\n      ) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        ////console.log(\"entrou no cadastro compra\");\n        ////console.log(this.preco_instrumento);\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else if (autorizacaoAux && com_nota == false) {\n        this.nota_fiscal = \"Não cadastrada\";\n        this.empresa = \"Não possui\";\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else {\n        this.hint_nota = \"Campo em branco\";\n        swal.fire({\n          type: \"warning\",\n          title: \"Oops, verifique...\",\n          text: \"Tem algum campo obrigatório que ainda não foi selecionado!\"\n        });\n      }\n    },\n    salvarcompra(preco, tombamento, nota, empresa, data) {\n      this.$http\n        .post(\n          this.$url + \"CompraInstrumento/v1\",\n          {\n            id: 0,\n            valor: preco,\n            tombamento: tombamento,\n            notafiscal: nota,\n            empresa: empresa,\n            dataCompra: data,\n            launchDate: new Date().toISOString().substr(0, 19)\n          },\n          {\n            headers: {\n              authorization: \"Bearer \" + this.autorizacao.accessToken\n            }\n          }\n        )\n        .then(response => {\n          if (response.status == 200) {\n            this.$emit(\"cadastrarInstrumentos\");\n            ////console.log(\"compra cadastrada\");\n          }\n          ////console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          ////console.error(e);\n          ////console.data(e.data);\n        });\n    },\n    SemDataCompra() {\n      this.com_data = !this.com_data;\n      if (this.com_data == false) {\n        this.data_compra = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá data de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.data_compra = new Date().toISOString().substr(0, 10);\n      }\n      ////console.log(this.data_compra);\n    },\n    SemNotaCompra() {\n      this.com_nota = !this.com_nota;\n      if (this.com_nota == false) {\n        this.notafiscal = this.descriçao_sem_nota;\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá nota de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.notafiscal = \"\";\n      }\n      ////console.log(this.notafiscal);\n    },\n    formatDate(date) {\n      if (!date) return null;\n\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    AtualizarEmpresas() {\n      this.empresas = [];\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http\n        .get(this.$url + \"Empresa/v1\", {\n          headers: { authorization: \"Bearer \" + this.autorizacao.accessToken }\n        })\n        .then(response => {\n          //console.log(response.status);\n          if (response.status == 200) {\n            //console.log(\"request ok! \", new Date().toISOString().substr(0, 16));\n            response.data.forEach(element => {\n              //console.log(\"Pós cadastro\", element.nome);\n              this.empresas.push(element.nome);\n            });\n\n            //console.log(response.data);\n          } else if (response.status == 401) {\n          }\n          //console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          //console.error(e);\n          //console.data(e.data);\n          //console.error(e);\n          //console.data(e.data);\n        });\n    }\n  }\n};\n",{"version":3,"sources":["Cadastro_Compra_sem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Cadastro_Compra_sem.vue","sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro","sourcesContent":["<template>\n  <v-container fluid grid-list-xl>\n    <v-layout align-center wrap>\n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-select\n          color=\"teal darken-3\"\n          :items=\"empresas\"\n          label=\"Empresa*\"\n          box\n          append-icon=\"fas fa-building\"\n          v-model=\"empresa\"\n          :rules=\"[() => !!empresa || 'Este campo precisa ser selecionado!']\"\n        ></v-select>\n      </v-flex>     \n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-dialog\n          ref=\"dialog_compra\"\n          v-model=\"modal_compra\"\n          :return-value.sync=\"data_compra\"\n          persistent\n          lazy\n          full-width\n          width=\"290px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"computedDateFormatted\"\n            label=\"Data da compra *\"\n            append-icon=\"event\"\n            readonly\n            color=\"teal darken-3\"\n            hint\n            persistent-hint\n            box\n          ></v-text-field>\n          <v-date-picker v-model=\"data_compra\" scrollable locale=\"pt-BR\">\n            <v-spacer></v-spacer>\n            <v-btn flat color=\"primary\" @click=\"modal_compra = false\">Cancelar</v-btn>\n            <v-btn flat color=\"primary\" @click=\"$refs.dialog_compra.save(data_compra)\">OK</v-btn>\n          </v-date-picker>\n        </v-dialog>\n      </v-flex>\n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-text-field\n          v-money=\"money\"\n          v-model.lazy=\"preco_instrumento\"\n          box\n          color=\"teal darken-3\"\n          append-icon=\"fas fa-hand-holding-usd\"\n          label=\"Valor do instrumento\"\n        ></v-text-field>\n      </v-flex>\n      <v-flex xs12 sm12 md6 lg6  d-flex>\n        <v-text-field\n          append-icon=\"fas fa-signature\"\n          v-model=\"nota_fiscal\"\n          box\n          color=\"teal darken-3\"\n          :hint=\"hint_nota\"\n          label=\"Nº da Nota Fiscal\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n      <cad-notap\n        v-on:cadastrarCompra=\"CadastrarCompra\"\n        v-bind:numero_tombamento=\"numero_do_instrumento\"\n        v-show=\"com_nota\"\n      ></cad-notap>   \n  </v-container>\n</template>\n\n<script type=\"text/babel\">\nimport swal from \"sweetalert2\";\nimport CadEmpresa from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Empresa\";\nimport CadNotap from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/NotaFiscal/CadastroNotaFiscalP\";\nimport { VMoney } from \"v-money\";\n\nexport default {\n  name: \"Cadastro_Empresa\",\n  components: {\n    CadEmpresa,\n    CadNotap\n  },\n  props: [\"numero_do_instrumento\"],\n  data() {\n    return {\n      money: {\n        decimal: \",\",\n        thousands: \".\",\n        prefix: \"R$ \",\n        suffix: \"\",\n        precision: 2,\n        masked: false /* doesn't work with directive */\n      },\n      com_data: true,\n      com_nota: true,\n      descriçao_sem_nota: \"sem nota fiscal.\",\n      dialog_compra: \"\",\n      modal_compra: false,\n      data_compra: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      observacao_instrumento: \"\",\n      dialog: false,\n      empresas: [],\n      empresa: \"\",\n      nota_sem_definicao: \"\",\n      nota_fiscal: \"\",\n      preco_instrumento: 0.0,\n      data_compra: new Date().toISOString().substr(0, 10),\n      tombamento: \"\",\n      path_nota: \"\",\n      hint_nota: \"\"\n    };\n  },\n  directives: { money: VMoney },\n  created() {\n    this.AtualizarEmpresas();\n  },\n\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.data_compra);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.data_compra);\n    }\n  },\n  methods: {\n    NotaPath(payload) {\n      this.nota_path = payload.path;\n      ////console.log(this.nota_path.dbPath);\n      this.tombamento = this.numero_do_instrumento;\n    },\n    CadastrarCompra() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      ////console.log(this.com_nota);\n      if (\n        (autorizacaoAux &&\n          this.com_nota == true &&\n          this.numero_do_instrumento != \"\" &&\n          this.nota_fiscal,\n        this.empresa != \"\" && this.data_compra != \"\")\n      ) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        ////console.log(\"entrou no cadastro compra\");\n        ////console.log(this.preco_instrumento);\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else if (autorizacaoAux && com_nota == false) {\n        this.nota_fiscal = \"Não cadastrada\";\n        this.empresa = \"Não possui\";\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else {\n        this.hint_nota = \"Campo em branco\";\n        swal.fire({\n          type: \"warning\",\n          title: \"Oops, verifique...\",\n          text: \"Tem algum campo obrigatório que ainda não foi selecionado!\"\n        });\n      }\n    },\n    salvarcompra(preco, tombamento, nota, empresa, data) {\n      this.$http\n        .post(\n          this.$url + \"CompraInstrumento/v1\",\n          {\n            id: 0,\n            valor: preco,\n            tombamento: tombamento,\n            notafiscal: nota,\n            empresa: empresa,\n            dataCompra: data,\n            launchDate: new Date().toISOString().substr(0, 19)\n          },\n          {\n            headers: {\n              authorization: \"Bearer \" + this.autorizacao.accessToken\n            }\n          }\n        )\n        .then(response => {\n          if (response.status == 200) {\n            this.$emit(\"cadastrarInstrumentos\");\n            ////console.log(\"compra cadastrada\");\n          }\n          ////console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          ////console.error(e);\n          ////console.data(e.data);\n        });\n    },\n    SemDataCompra() {\n      this.com_data = !this.com_data;\n      if (this.com_data == false) {\n        this.data_compra = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá data de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.data_compra = new Date().toISOString().substr(0, 10);\n      }\n      ////console.log(this.data_compra);\n    },\n    SemNotaCompra() {\n      this.com_nota = !this.com_nota;\n      if (this.com_nota == false) {\n        this.notafiscal = this.descriçao_sem_nota;\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá nota de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.notafiscal = \"\";\n      }\n      ////console.log(this.notafiscal);\n    },\n    formatDate(date) {\n      if (!date) return null;\n\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    AtualizarEmpresas() {\n      this.empresas = [];\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http\n        .get(this.$url + \"Empresa/v1\", {\n          headers: { authorization: \"Bearer \" + this.autorizacao.accessToken }\n        })\n        .then(response => {\n          //console.log(response.status);\n          if (response.status == 200) {\n            //console.log(\"request ok! \", new Date().toISOString().substr(0, 16));\n            response.data.forEach(element => {\n              //console.log(\"Pós cadastro\", element.nome);\n              this.empresas.push(element.nome);\n            });\n\n            //console.log(response.data);\n          } else if (response.status == 401) {\n          }\n          //console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          //console.error(e);\n          //console.data(e.data);\n          //console.error(e);\n          //console.data(e.data);\n        });\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}