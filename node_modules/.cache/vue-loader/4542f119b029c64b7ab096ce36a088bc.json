{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/SelecaoOrigem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/SelecaoOrigem.vue","mtime":1569691366103},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport CadOrigem from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/CadastroOrigem\";\nimport swal from \"sweetalert2\";\nexport default {\n  name: \"SelecaoOrigem\",\n  components: {\n    CadOrigem\n  },\n  data() {\n    return {\n      isUpdating: false,\n      autorizacao: false,\n      origens: [],\n      origem: null\n    };\n  },\n  created() {\n    this.AtualizarOrigens();\n  },\n  watch: {\n    isUpdating(val) {\n      if (val) {\n        setTimeout(() => (this.isUpdating = false), 3000);\n      }\n    }\n  },\n  methods: {\n    remove(item) {\n      const index = this.origens.indexOf(item.name);\n      if (index >= 0) this.origens.splice(index, 1);\n    },\n    Selecionar(doador, cidade ,estado) {\n      //console.log(doador, cidade, estado)\n      this.$emit(\"origem_instrumento\", { origem: doador+\", \"+cidade+\"/\"+estado });\n    },\n    DeletarOrigem(id, origem) {\n      swal\n        .fire({\n          title:\n            \"Deseja excluir a origem \" +\n            origem.doador +\n            \" \" +\n            origem.cidade +\n            \" \" +\n            origem.estado +\n            \"?\",\n          text: \"Após a confirmação esta ação não poderá ser revertida!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Sim, deletar\"\n        })\n        .then(result => {\n          if (result.value) {\n            this.Deletar(id);\n            swal.fire(\n              \"Deletado!\",\n              \"A origem \" +\n                origem.doador +\n                \" \" +\n                origem.cidade +\n                \" \" +\n                origem.estado +\n                \" foi deletado com sucesso.\",\n              \"success\"\n            );\n          }\n        });\n    },\n    Deletar(id) {\n      //endpoit que fará a deleção do item ano\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      if (!usuarioAutorize) {\n        this.$router.push(\"/\");\n        const toast = swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        toast({\n          type: \"error\",\n          title: \"Sem autorização, entre com seus dados novamente!\"\n        });\n      } else if (usuarioAutorize) {\n        this.autorizacao = JSON.parse(usuarioAutorize);\n        this.$http\n          .delete(this.$url + \"OrigemInstrumento/v1/\" + id, {\n            headers: {\n              authorization: \"Bearer \" + this.autorizacao.accessToken\n            }\n          })\n          .then(response => {\n            //console.log(response.status);\n            //console.log(\"deletando origem\");\n            if (response.status == 204) {\n              //console.log(\"dados do origem\");\n              //console.log(response.data);\n              this.AtualizarOrigens();\n              //Criar um loop pois o dado \"data\" que é recebido é um array\n            } else if (response.status == 401) {\n              this.$router.push(\"/\");\n              const toast = swal.mixin({\n                toast: true,\n                position: \"top-end\",\n                showConfirmButton: false,\n                timer: 3000\n              });\n            }\n          })\n          .catch(e => {\n            swal.fire(\n              \"Sua autorização expirou!\",\n              \"Entre com suas credencias novamente.\",\n              \"warning\"\n            );\n            this.$router.push(\"/\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }\n    },\n    AtualizarOrigens() {\n      this.origens = [];\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http\n        .get(this.$url + \"OrigemInstrumento/v1\", {\n          headers: { authorization: \"Bearer \" + this.autorizacao.accessToken }\n        })\n        .then(response => {\n          //console.log(response.status);\n          if (response.status == 200) {\n            //console.log(\n            //  \"ORIGENS DATA ok! \",\n            //  new Date().toISOString().substr(0, 16)\n            //);\n            this.origens = response.data;\n            //console.log(response.data);\n            //console.log(this.origens);\n          } else if (response.status == 401) {\n          }\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          //console.error(e);\n          //console.data(e.data);\n        });\n    }\n  }\n};\n",{"version":3,"sources":["SelecaoOrigem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelecaoOrigem.vue","sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem","sourcesContent":["<template>\n  <v-flex xs12 sm6 md8 d-flex>\n    <v-autocomplete\n      v-model=\"origem\"\n      :items=\"origens\"\n      box\n      label=\"Origem\"\n      item-text=\"cidade\"\n      item-value=\"cidade\"\n      color=\"teal darken-3\"\n      single-line\n      append-icon=\"far fa-list-alt\"\n    >\n      <template\n        slot=\"selection\"\n        slot-scope=\"data\"\n      >{{data.item.doador}}, {{data.item.cidade }}-{{data.item.estado}}</template>\n      <template slot=\"item\" slot-scope=\"data\">\n        <v-flex xs10 sm10>\n          <v-list-tile>\n            <v-list-tile-content\n              @click=\"Selecionar(data.item.doador,data.item.cidade, data.item.estado)\"\n            >{{data.item.doador}}, {{data.item.cidade }}-{{data.item.estado}}</v-list-tile-content>\n          </v-list-tile>\n        </v-flex>\n      </template>\n    </v-autocomplete>\n    <cad-origem @origens=\"AtualizarOrigens\"></cad-origem>\n  </v-flex>\n</template>\n<script type=\"text/babel\">\nimport CadOrigem from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/CadastroOrigem\";\nimport swal from \"sweetalert2\";\nexport default {\n  name: \"SelecaoOrigem\",\n  components: {\n    CadOrigem\n  },\n  data() {\n    return {\n      isUpdating: false,\n      autorizacao: false,\n      origens: [],\n      origem: null\n    };\n  },\n  created() {\n    this.AtualizarOrigens();\n  },\n  watch: {\n    isUpdating(val) {\n      if (val) {\n        setTimeout(() => (this.isUpdating = false), 3000);\n      }\n    }\n  },\n  methods: {\n    remove(item) {\n      const index = this.origens.indexOf(item.name);\n      if (index >= 0) this.origens.splice(index, 1);\n    },\n    Selecionar(doador, cidade ,estado) {\n      //console.log(doador, cidade, estado)\n      this.$emit(\"origem_instrumento\", { origem: doador+\", \"+cidade+\"/\"+estado });\n    },\n    DeletarOrigem(id, origem) {\n      swal\n        .fire({\n          title:\n            \"Deseja excluir a origem \" +\n            origem.doador +\n            \" \" +\n            origem.cidade +\n            \" \" +\n            origem.estado +\n            \"?\",\n          text: \"Após a confirmação esta ação não poderá ser revertida!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Sim, deletar\"\n        })\n        .then(result => {\n          if (result.value) {\n            this.Deletar(id);\n            swal.fire(\n              \"Deletado!\",\n              \"A origem \" +\n                origem.doador +\n                \" \" +\n                origem.cidade +\n                \" \" +\n                origem.estado +\n                \" foi deletado com sucesso.\",\n              \"success\"\n            );\n          }\n        });\n    },\n    Deletar(id) {\n      //endpoit que fará a deleção do item ano\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      if (!usuarioAutorize) {\n        this.$router.push(\"/\");\n        const toast = swal.mixin({\n          toast: true,\n          position: \"top-end\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n\n        toast({\n          type: \"error\",\n          title: \"Sem autorização, entre com seus dados novamente!\"\n        });\n      } else if (usuarioAutorize) {\n        this.autorizacao = JSON.parse(usuarioAutorize);\n        this.$http\n          .delete(this.$url + \"OrigemInstrumento/v1/\" + id, {\n            headers: {\n              authorization: \"Bearer \" + this.autorizacao.accessToken\n            }\n          })\n          .then(response => {\n            //console.log(response.status);\n            //console.log(\"deletando origem\");\n            if (response.status == 204) {\n              //console.log(\"dados do origem\");\n              //console.log(response.data);\n              this.AtualizarOrigens();\n              //Criar um loop pois o dado \"data\" que é recebido é um array\n            } else if (response.status == 401) {\n              this.$router.push(\"/\");\n              const toast = swal.mixin({\n                toast: true,\n                position: \"top-end\",\n                showConfirmButton: false,\n                timer: 3000\n              });\n            }\n          })\n          .catch(e => {\n            swal.fire(\n              \"Sua autorização expirou!\",\n              \"Entre com suas credencias novamente.\",\n              \"warning\"\n            );\n            this.$router.push(\"/\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }\n    },\n    AtualizarOrigens() {\n      this.origens = [];\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http\n        .get(this.$url + \"OrigemInstrumento/v1\", {\n          headers: { authorization: \"Bearer \" + this.autorizacao.accessToken }\n        })\n        .then(response => {\n          //console.log(response.status);\n          if (response.status == 200) {\n            //console.log(\n            //  \"ORIGENS DATA ok! \",\n            //  new Date().toISOString().substr(0, 16)\n            //);\n            this.origens = response.data;\n            //console.log(response.data);\n            //console.log(this.origens);\n          } else if (response.status == 401) {\n          }\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          //console.error(e);\n          //console.data(e.data);\n        });\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}