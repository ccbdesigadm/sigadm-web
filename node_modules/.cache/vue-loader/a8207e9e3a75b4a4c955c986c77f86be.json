{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Cadastro/CadDoacao_sem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Cadastro/CadDoacao_sem.vue","mtime":1569691366103},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport swal from \"sweetalert2\";\nimport SelecionarOrigemSem from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/SelecaoOrigem\";\nimport CadTermos from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Termos/CadastroTermos\";\nexport default {\n  name: \"CadDoacao\",\n  components: { SelecionarOrigemSem, CadTermos },\n  data() {\n    return {\n      checkbox1:false,\n      label:'Marque para sem data',\n      com_data: true,\n      enabled: false,\n      dialog_doacao: \"\",\n      modal_doacao: false,\n      data_doacao: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      origem:null,\n      observacao_instrumento: \"\",\n      dialog: false,\n      items: [{ id: 1, icon: true, title: \"Documento\" }]\n    };\n  },\n  created() {},\n  props: [\"numero_do_instrumento\"],\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.data_doacao);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.data_doacao);\n    }\n  },\n  methods: {\n    dataActive(){\n     if (this.checkbox1 == false) {\n       this.label = \"Marque para sem data\"\n       this.com_data = true\n     }else if(this.checkbox1 == true){\n       this.label = \"Desmarque para com data\"\n       this.com_data = false\n     }\n    },\n    criarDoc() {\n      if (this.items.length < 6) {\n        this.items.push({\n          id: this.items.length + 1,\n          icon: true,\n          title: \"Documento\"\n        });\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"success\",\n          title: \"Adicionado um novo campo de anexo de documento\"\n          //Colocar uma seta para o botão sair\n        });\n      } else {\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"warning\",\n          title: \"Quantidade permitida é de \" + this.items.length + \" campos\"\n          //Colocar uma seta para o botão sair\n        });\n      }\n    },\n    removeDoc(id) {\n      if (id > -1) {\n        this.items.forEach(element => {\n          //console.log(\"ID: \", element.id);\n        });\n        //console.log(\"ID: \", id);\n        let i = this.items.map(item => item.id).indexOf(id);\n        this.items.splice(i, 1);\n        //console.log(\"ID removido: \", i + 1);\n        this.items.forEach(element => {\n          //console.log(element.id);\n        });\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"warning\",\n          title: \"Removido o documento \"\n          //Colocar uma seta para o botão sair\n        });\n      } else {\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 2000\n        });\n        toast({\n          type: \"error\",\n          title: \"Não é permitido remover este campo.\"\n          //Colocar uma seta para o botão sair\n        });\n      }\n    },\n    SelecionarOrigemDoInstrumento(payload) {\n      //console.log(\"antes: \", this.origem);\n      this.origem =payload.origem;\n      //console.log(\"depois: \", this.origem);\n    },\n\n    CadastrarDoacao() {\n      /*console.log(\n        this.data_doacao,\n        this.origem_instrumento,\n        this.observacao_instrumento,\n        this.numero_do_instrumento\n      );*/\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        //console.log(\"entrou no cadastro doacao\");\n        this.$http\n          .post(\n            this.$url + \"DoacaoInstrumento/v1\",\n            {\n              id: 0,\n              tombamento: this.numero_do_instrumento,\n              origem: this.origem,\n              observacao: this.observacao_instrumento,\n              dataDoacao: this.data_doacao,\n              launchDate: new Date().toISOString().substr(0, 19)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              //console.log(\"doação cadastrada\");\n              this.$emit(\"cadastrarInstrumentos\");\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            swal.fire(\n              \"Sua autorização expirou!\",\n              \"Entre com suas credencias novamente.\",\n              \"warning\"\n            );\n            this.$router.push(\"/\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }\n    },\n    SemDataDoacao() {\n      this.com_data = !this.com_data;\n      if (this.com_data == false) {\n        this.data_doacao = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá data de doação registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.data_doacao = new Date().toISOString().substr(0, 10);\n      }\n      //console.log(this.data_doacao);\n      //console.log(this.data_doacao_sem_definicao);\n    },\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    }\n  }\n};\n",{"version":3,"sources":["CadDoacao_sem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"CadDoacao_sem.vue","sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Cadastro","sourcesContent":["<template>\n  <v-container fluid grid-list-xl>    \n    <v-layout align-center wrap>\n      <v-flex md2>\n        <v-checkbox color=\"green\" v-model=\"checkbox1\" class=\"pb-4 subheading\"  :label=\"label\" @change=\"dataActive\"></v-checkbox>\n      </v-flex>\n      <v-flex xs12 sm12 md2 v-show=\"com_data == true\">                 \n        <v-dialog\n          ref=\"dialog_doacao\"\n          v-model=\"modal_doacao\"\n          :return-value.sync=\"data_doacao\"\n          persistent\n          lazy          \n          full-width\n          width=\"290px\"\n          color=\"blue lighten-2\"\n        >\n        \n          <v-text-field\n            slot=\"activator\"\n            v-model=\"computedDateFormatted\"\n            label=\"Data da doação *\"\n            append-icon=\"event\"\n            readonly\n            hint\n            single-line=\"\"\n            persistent-hint\n            box\n            color=\"blue lighten-2\"\n          ></v-text-field>          \n          <v-date-picker v-model=\"data_doacao\" scrollable locale=\"pt-BR\">\n            <v-spacer></v-spacer>\n            <v-btn flat color=\"primary\" @click=\"modal_doacao = false\">Cancelar</v-btn>\n            <v-btn flat color=\"primary\" @click=\"$refs.dialog_doacao.save(data_doacao)\">OK</v-btn>\n          </v-date-picker>\n        </v-dialog>        \n      </v-flex>\n      <selecionar-origem-sem @origem_instrumento=\"SelecionarOrigemDoInstrumento\"></selecionar-origem-sem>\n      <v-flex xs12 sm12 md4 v-if=\"com_data == true\">\n        <v-text-field\n          append-icon=\"fas fa-eye\"\n          v-model=\"observacao_instrumento\"\n          box\n          label=\"Observações\"\n          color=\"teal darken-3\"\n        ></v-text-field>\n      </v-flex>\n      <v-flex xs12 sm12 md6 v-if=\"com_data == false\">\n        <v-text-field\n          append-icon=\"fas fa-eye\"\n          v-model=\"observacao_instrumento\"\n          box\n          label=\"Observações\"\n          color=\"teal darken-3\"\n        ></v-text-field>\n      </v-flex>      \n    </v-layout>\n    <cad-termos\n      v-on:cadastrarDoacao=\"CadastrarDoacao\"\n      v-bind:numero_tombamento=\"numero_do_instrumento\"\n    ></cad-termos>\n  </v-container>\n</template>\n<script type=\"text/babel\">\nimport swal from \"sweetalert2\";\nimport SelecionarOrigemSem from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Origem/SelecaoOrigem\";\nimport CadTermos from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Doacao/Termos/CadastroTermos\";\nexport default {\n  name: \"CadDoacao\",\n  components: { SelecionarOrigemSem, CadTermos },\n  data() {\n    return {\n      checkbox1:false,\n      label:'Marque para sem data',\n      com_data: true,\n      enabled: false,\n      dialog_doacao: \"\",\n      modal_doacao: false,\n      data_doacao: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      origem:null,\n      observacao_instrumento: \"\",\n      dialog: false,\n      items: [{ id: 1, icon: true, title: \"Documento\" }]\n    };\n  },\n  created() {},\n  props: [\"numero_do_instrumento\"],\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.data_doacao);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.data_doacao);\n    }\n  },\n  methods: {\n    dataActive(){\n     if (this.checkbox1 == false) {\n       this.label = \"Marque para sem data\"\n       this.com_data = true\n     }else if(this.checkbox1 == true){\n       this.label = \"Desmarque para com data\"\n       this.com_data = false\n     }\n    },\n    criarDoc() {\n      if (this.items.length < 6) {\n        this.items.push({\n          id: this.items.length + 1,\n          icon: true,\n          title: \"Documento\"\n        });\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"success\",\n          title: \"Adicionado um novo campo de anexo de documento\"\n          //Colocar uma seta para o botão sair\n        });\n      } else {\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"warning\",\n          title: \"Quantidade permitida é de \" + this.items.length + \" campos\"\n          //Colocar uma seta para o botão sair\n        });\n      }\n    },\n    removeDoc(id) {\n      if (id > -1) {\n        this.items.forEach(element => {\n          //console.log(\"ID: \", element.id);\n        });\n        //console.log(\"ID: \", id);\n        let i = this.items.map(item => item.id).indexOf(id);\n        this.items.splice(i, 1);\n        //console.log(\"ID removido: \", i + 1);\n        this.items.forEach(element => {\n          //console.log(element.id);\n        });\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        toast({\n          type: \"warning\",\n          title: \"Removido o documento \"\n          //Colocar uma seta para o botão sair\n        });\n      } else {\n        const toast = swal.mixin({\n          toast: true,\n          position: \"center\",\n          showConfirmButton: false,\n          timer: 2000\n        });\n        toast({\n          type: \"error\",\n          title: \"Não é permitido remover este campo.\"\n          //Colocar uma seta para o botão sair\n        });\n      }\n    },\n    SelecionarOrigemDoInstrumento(payload) {\n      //console.log(\"antes: \", this.origem);\n      this.origem =payload.origem;\n      //console.log(\"depois: \", this.origem);\n    },\n\n    CadastrarDoacao() {\n      /*console.log(\n        this.data_doacao,\n        this.origem_instrumento,\n        this.observacao_instrumento,\n        this.numero_do_instrumento\n      );*/\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      if (autorizacaoAux) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        //console.log(\"entrou no cadastro doacao\");\n        this.$http\n          .post(\n            this.$url + \"DoacaoInstrumento/v1\",\n            {\n              id: 0,\n              tombamento: this.numero_do_instrumento,\n              origem: this.origem,\n              observacao: this.observacao_instrumento,\n              dataDoacao: this.data_doacao,\n              launchDate: new Date().toISOString().substr(0, 19)\n            },\n            {\n              headers: {\n                authorization: \"Bearer \" + this.autorizacao.accessToken\n              }\n            }\n          )\n          .then(response => {\n            if (response.status == 200) {\n              //console.log(\"doação cadastrada\");\n              this.$emit(\"cadastrarInstrumentos\");\n            }\n            //console.log(response.data);\n          })\n          .catch(e => {\n            swal.fire(\n              \"Sua autorização expirou!\",\n              \"Entre com suas credencias novamente.\",\n              \"warning\"\n            );\n            this.$router.push(\"/\");\n            //console.error(e);\n            //console.data(e.data);\n          });\n      }\n    },\n    SemDataDoacao() {\n      this.com_data = !this.com_data;\n      if (this.com_data == false) {\n        this.data_doacao = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá data de doação registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.data_doacao = new Date().toISOString().substr(0, 10);\n      }\n      //console.log(this.data_doacao);\n      //console.log(this.data_doacao_sem_definicao);\n    },\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"]}]}