{"remainingRequest":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/babel-loader/lib/index.js!/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/joel/Projetos/sigadm-team/sigadm-web/src/pages/Modulos/Patrimonio/Instrumento/Cadastros/store/storeInstrumento.js","dependencies":[{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/src/pages/Modulos/Patrimonio/Instrumento/Cadastros/store/storeInstrumento.js","mtime":1577190729000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629000},{"path":"/home/joel/Projetos/sigadm-team/sigadm-web/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1569691673000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nvar url = 'https://sigadm-patrimonio-services.herokuapp.com/api/';\nvar local = 'http://localhost:49775/api/';\nvar http = axios;\nexport default new Vuex.Store({\n  state: {\n    // O estado atual da aplicação está aqui\n    nome: 'Clarinete',\n    ano: '2018',\n    tombamento: '0001',\n    caracteristica: 'Sib',\n    nomesTest: [],\n    nomes: [],\n    anos: [],\n    tombamentos: [],\n    marcas: [],\n    componentes: []\n  },\n  getters: {\n    /** Compute derived state based on the current state. More like computed property.\n    *   como propriedades computadas para store o resultado de um getter é armazenado em cache com base em suas dependências \n    *   e só será reavaliado quando algumas de suas dependências forem alteradas.\n    **/\n  },\n  mutations: {\n    // MUDANÇAS NO ESTADO ATUAL\n    atualizarNomeInstrumento: function atualizarNomeInstrumento(state, nome) {\n      state.nome = nome;\n    },\n    MudandoStateNomesTest: function MudandoStateNomesTest(state, payload) {\n      state.nomesTest = payload;\n    },\n    MudandoStateNomes: function MudandoStateNomes(state, payload) {\n      state.nomes = payload;\n    },\n    MudandoStateAnos: function MudandoStateAnos(state, payload) {\n      state.anos = payload;\n    },\n    MudandoStateTombamentos: function MudandoStateTombamentos(state, payload) {\n      state.tombamentos = payload;\n    },\n    MudandoStateMarcas: function MudandoStateMarcas(state, payload) {\n      state.marcas = payload;\n    },\n    MudandoStateComponente: function MudandoStateComponente(state, payload) {\n      state.componentes = payload;\n    }\n  },\n  actions: {\n    // Obter dados do servidor e enviá-los para mutações para alterar o estado atual\n    // Ação é disparada com Store.dispatch('nome da ação');\n    InserindoNomesInstrumentos: function InserindoNomesInstrumentos(context) {\n      var nomes = ['Clarinete', 'Violino', 'Flauta'];\n      context.commit('MudandoStateNomesTest', nomes);\n    },\n    BuscandoNomesInstrumentos: function BuscandoNomesInstrumentos(context) {\n      var Usuario = sessionStorage.getItem(\"usuario\");\n      var autorizacao = JSON.parse(Usuario);\n      http.get(url + \"NomeInstrumento/v1\", {\n        headers: {\n          authorization: \"Bearer \" + autorizacao.accessToken\n        }\n      }).then(function (response) {\n        ////console.log(response.status);\n        if (response.status == 200) {\n          ////console.log(response.data)\n          var nomes = [];\n          response.data.forEach(function (element) {\n            nomes.push(element);\n          });\n          context.commit('MudandoStateNomes', nomes);\n        }\n      }).catch(function (e) {//console.error(e);\n        //console.data(e.data);\n      });\n    },\n    BuscandoAnosInstrumentos: function BuscandoAnosInstrumentos(context) {\n      var Usuario = sessionStorage.getItem(\"usuario\");\n      var autorizacao = JSON.parse(Usuario);\n      http.get(url + \"Ano/v1\", {\n        headers: {\n          authorization: \"Bearer \" + autorizacao.accessToken\n        }\n      }).then(function (response) {\n        ////console.log(response.status);\n        if (response.status == 200) {\n          ////console.log(response.data)\n          var anos = [];\n          response.data.forEach(function (element) {\n            anos.push(element);\n          });\n          context.commit('MudandoStateAnos', anos);\n        }\n      }).catch(function (e) {//console.error(e);\n        //console.data(e.data);\n      });\n    },\n    BuscandoTombamentosInstrumentos: function BuscandoTombamentosInstrumentos(context) {\n      var Usuario = sessionStorage.getItem(\"usuario\");\n      var autorizacao = JSON.parse(Usuario);\n      http.get(url + \"TombamentoInstrumento/v1\", {\n        headers: {\n          authorization: \"Bearer \" + autorizacao.accessToken\n        }\n      }).then(function (response) {\n        ////console.log(response.status);\n        if (response.status == 200) {\n          var tombamento = [];\n          response.data.forEach(function (element) {\n            if (element.status == 1) {\n              tombamento.push({\n                id: element.id,\n                numero: element.numero\n              });\n              context.commit('MudandoStateTombamentos', tombamento);\n            }\n          });\n        }\n      }).catch(function (e) {//console.error(e);\n        //console.data(e.data);\n      });\n    },\n    BuscandoMarcasInstrumentos: function BuscandoMarcasInstrumentos(context) {\n      var Usuario = sessionStorage.getItem(\"usuario\");\n      var autorizacao = JSON.parse(Usuario);\n      http.get(url + \"MarcaInstrumento/v1\", {\n        headers: {\n          authorization: \"Bearer \" + autorizacao.accessToken\n        }\n      }).then(function (response) {\n        ////console.log(response.status);\n        if (response.status == 200) {\n          ////console.log(response.data)\n          var marcas = [];\n          response.data.forEach(function (element) {\n            marcas.push(element);\n          });\n          context.commit('MudandoStateMarcas', marcas);\n        }\n      }).catch(function (e) {//console.error(e);\n        //console.data(e.data);\n      });\n    },\n    BuscandoComponentesInstrumentos: function BuscandoComponentesInstrumentos(context) {\n      var Usuario = sessionStorage.getItem(\"usuario\");\n      var autorizacao = JSON.parse(Usuario);\n      http.get(url + \"ComponenteInstrumento/v1\", {\n        headers: {\n          authorization: \"Bearer \" + autorizacao.accessToken\n        }\n      }).then(function (response) {\n        ////console.log(response.status);\n        if (response.status == 200) {\n          ////console.log(response.data)\n          var componentes = [];\n          response.data.forEach(function (element) {\n            componentes.push(element);\n          });\n          context.commit('MudandoStateComponente', componentes);\n        }\n      }).catch(function (e) {//console.error(e);\n        //console.data(e.data);\n      });\n    }\n  }\n});",{"version":3,"sources":["/home/joel/Projetos/sigadm-team/sigadm-web/src/pages/Modulos/Patrimonio/Instrumento/Cadastros/store/storeInstrumento.js"],"names":["Vue","Vuex","axios","use","url","local","http","Store","state","nome","ano","tombamento","caracteristica","nomesTest","nomes","anos","tombamentos","marcas","componentes","getters","mutations","atualizarNomeInstrumento","MudandoStateNomesTest","payload","MudandoStateNomes","MudandoStateAnos","MudandoStateTombamentos","MudandoStateMarcas","MudandoStateComponente","actions","InserindoNomesInstrumentos","context","commit","BuscandoNomesInstrumentos","Usuario","sessionStorage","getItem","autorizacao","JSON","parse","get","headers","authorization","accessToken","then","response","status","data","forEach","element","push","catch","e","BuscandoAnosInstrumentos","BuscandoTombamentosInstrumentos","id","numero","BuscandoMarcasInstrumentos","BuscandoComponentesInstrumentos"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios';\n\nVue.use(Vuex)\nlet url = 'https://sigadm-patrimonio-services.herokuapp.com/api/';\nlet local = 'http://localhost:49775/api/'\nlet http = axios;\n\nexport default new Vuex.Store({\n    state: {\n        // O estado atual da aplicação está aqui\n        nome: 'Clarinete',\n        ano: '2018',\n        tombamento: '0001',\n        caracteristica: 'Sib',\n        nomesTest: [],\n        nomes: [],\n        anos: [],\n        tombamentos: [],\n        marcas: [],\n        componentes: []\n    },\n    getters: {\n        /** Compute derived state based on the current state. More like computed property.\n        *   como propriedades computadas para store o resultado de um getter é armazenado em cache com base em suas dependências \n        *   e só será reavaliado quando algumas de suas dependências forem alteradas.\n        **/\n    },\n    mutations: {\n        // MUDANÇAS NO ESTADO ATUAL\n        atualizarNomeInstrumento(state, nome) {\n            state.nome = nome\n        },\n        MudandoStateNomesTest(state, payload) {\n            state.nomesTest = payload;\n        },\n        MudandoStateNomes(state, payload) {\n            state.nomes = payload;\n        },\n        MudandoStateAnos(state, payload) {\n            state.anos = payload;\n        },\n        MudandoStateTombamentos(state, payload) {\n            state.tombamentos = payload;\n        },\n        MudandoStateMarcas(state, payload) {\n            state.marcas = payload;\n        },\n        MudandoStateComponente(state, payload) {\n            state.componentes = payload;\n        }\n    },\n    actions: {\n        // Obter dados do servidor e enviá-los para mutações para alterar o estado atual\n        // Ação é disparada com Store.dispatch('nome da ação');\n        InserindoNomesInstrumentos(context) {\n            let nomes = ['Clarinete', 'Violino', 'Flauta']\n            context.commit('MudandoStateNomesTest', nomes)\n        },\n        BuscandoNomesInstrumentos(context) {\n            let Usuario = sessionStorage.getItem(\"usuario\");\n            let autorizacao = JSON.parse(Usuario);\n            http.get(url + \"NomeInstrumento/v1\", {\n                headers: { authorization: \"Bearer \" + autorizacao.accessToken }\n            }).then(response => {\n                ////console.log(response.status);\n                if (response.status == 200) {\n                    ////console.log(response.data)\n                    let nomes = [];\n                    response.data.forEach(element => {\n                        nomes.push(element)\n                    });\n                    context.commit('MudandoStateNomes', nomes)\n                }\n            }).catch(e => {\n                //console.error(e);\n                //console.data(e.data);\n            });\n        },\n        BuscandoAnosInstrumentos(context) {\n            let Usuario = sessionStorage.getItem(\"usuario\");\n            let autorizacao = JSON.parse(Usuario);\n            http.get(url + \"Ano/v1\", {\n                headers: { authorization: \"Bearer \" + autorizacao.accessToken }\n            }).then(response => {\n                ////console.log(response.status);\n                if (response.status == 200) {\n                    ////console.log(response.data)\n                    let anos = []\n                    response.data.forEach(element => {\n                        anos.push(element)\n                    });\n                    context.commit('MudandoStateAnos', anos)\n                }\n            }).catch(e => {\n                //console.error(e);\n                //console.data(e.data);\n            });\n        },\n        BuscandoTombamentosInstrumentos(context) {\n            let Usuario = sessionStorage.getItem(\"usuario\");\n            let autorizacao = JSON.parse(Usuario);\n            http.get(url + \"TombamentoInstrumento/v1\", { headers: { authorization: \"Bearer \" + autorizacao.accessToken } }).then(response => {\n                ////console.log(response.status);\n                if (response.status == 200) {\n                    let tombamento = [];\n                    response.data.forEach(element => {\n                        if (element.status == 1) {\n                            tombamento.push({ id: element.id, numero: element.numero })\n                            context.commit('MudandoStateTombamentos', tombamento)\n                        }\n                    });\n                }\n            }).catch(e => {\n                //console.error(e);\n                //console.data(e.data);\n            });\n        },\n        BuscandoMarcasInstrumentos(context) {\n            let Usuario = sessionStorage.getItem(\"usuario\");\n            let autorizacao = JSON.parse(Usuario);\n            http.get(url + \"MarcaInstrumento/v1\", {\n                headers: { authorization: \"Bearer \" + autorizacao.accessToken }\n            }).then(response => {\n                ////console.log(response.status);\n                if (response.status == 200) {\n                    ////console.log(response.data)\n                    let marcas = [];\n                    response.data.forEach(element => {\n                        marcas.push(element)\n                    });\n                    context.commit('MudandoStateMarcas', marcas)\n                }\n            }).catch(e => {\n                //console.error(e);\n                //console.data(e.data);\n            });\n        },\n        BuscandoComponentesInstrumentos(context) {\n            let Usuario = sessionStorage.getItem(\"usuario\");\n            let autorizacao = JSON.parse(Usuario);\n            http.get(url + \"ComponenteInstrumento/v1\", {\n                headers: { authorization: \"Bearer \" + autorizacao.accessToken }\n            }).then(response => {\n                ////console.log(response.status);\n                if (response.status == 200) {\n                    ////console.log(response.data)\n                    let componentes = [];\n                    response.data.forEach(element => {\n                        componentes.push(element)\n                    });\n                    context.commit('MudandoStateComponente', componentes)\n                }\n            }).catch(e => {\n                //console.error(e);\n                //console.data(e.data);\n            });\n        }\n    }\n})\n\n\n\n"]}]}