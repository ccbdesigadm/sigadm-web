{"remainingRequest":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js!/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Compra_sem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/joel/Projetos/Web/sigadm-web/src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Compra_sem.vue","mtime":1569691366099},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/babel-loader/lib/index.js","mtime":1569691629983},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/cache-loader/dist/cjs.js","mtime":1569691702388},{"path":"/home/joel/Projetos/Web/sigadm-web/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1569691710961}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/home/joel/Projetos/Web/sigadm-web/node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/joel/Projetos/Web/sigadm-web/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport swal from \"sweetalert2\";\nimport CadEmpresa from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Empresa\";\nimport CadNotap from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/NotaFiscal/CadastroNotaFiscalP\";\nimport { VMoney } from \"v-money\";\nexport default {\n  name: \"Cadastro_Empresa\",\n  components: {\n    CadEmpresa: CadEmpresa,\n    CadNotap: CadNotap\n  },\n  props: [\"numero_do_instrumento\"],\n  data: function data() {\n    var _ref;\n\n    return _ref = {\n      money: {\n        decimal: \",\",\n        thousands: \".\",\n        prefix: \"R$ \",\n        suffix: \"\",\n        precision: 2,\n        masked: false\n        /* doesn't work with directive */\n\n      },\n      com_data: true,\n      com_nota: true,\n      descriçao_sem_nota: \"sem nota fiscal.\",\n      dialog_compra: \"\",\n      modal_compra: false,\n      data_compra: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      observacao_instrumento: \"\",\n      dialog: false,\n      empresas: [],\n      empresa: \"\",\n      nota_sem_definicao: \"\",\n      nota_fiscal: \"\",\n      preco_instrumento: 0.0\n    }, _defineProperty(_ref, \"data_compra\", new Date().toISOString().substr(0, 10)), _defineProperty(_ref, \"tombamento\", \"\"), _defineProperty(_ref, \"path_nota\", \"\"), _defineProperty(_ref, \"hint_nota\", \"\"), _ref;\n  },\n  directives: {\n    money: VMoney\n  },\n  created: function created() {\n    this.AtualizarEmpresas();\n  },\n  computed: {\n    computedDateFormatted: function computedDateFormatted() {\n      return this.formatDate(this.data_compra);\n    }\n  },\n  watch: {\n    date: function date(val) {\n      this.dateFormatted = this.formatDate(this.data_compra);\n    }\n  },\n  methods: {\n    NotaPath: function NotaPath(payload) {\n      this.nota_path = payload.path; ////console.log(this.nota_path.dbPath);\n\n      this.tombamento = this.numero_do_instrumento;\n    },\n    CadastrarCompra: function CadastrarCompra() {\n      var autorizacaoAux = sessionStorage.getItem(\"usuario\"); ////console.log(this.com_nota);\n\n      if (autorizacaoAux && this.com_nota == true && this.numero_do_instrumento != \"\" && this.nota_fiscal, this.empresa != \"\" && this.data_compra != \"\") {\n        this.autorizacao = JSON.parse(autorizacaoAux); ////console.log(\"entrou no cadastro compra\");\n        ////console.log(this.preco_instrumento);\n\n        this.salvarcompra(this.preco_instrumento, this.numero_do_instrumento, this.nota_fiscal, this.empresa, this.data_compra);\n      } else if (autorizacaoAux && com_nota == false) {\n        this.nota_fiscal = \"Não cadastrada\";\n        this.empresa = \"Não possui\";\n        this.salvarcompra(this.preco_instrumento, this.numero_do_instrumento, this.nota_fiscal, this.empresa, this.data_compra);\n      } else {\n        this.hint_nota = \"Campo em branco\";\n        swal.fire({\n          type: \"warning\",\n          title: \"Oops, verifique...\",\n          text: \"Tem algum campo obrigatório que ainda não foi selecionado!\"\n        });\n      }\n    },\n    salvarcompra: function salvarcompra(preco, tombamento, nota, empresa, data) {\n      var _this = this;\n\n      this.$http.post(this.$url + \"CompraInstrumento/v1\", {\n        id: 0,\n        valor: preco,\n        tombamento: tombamento,\n        notafiscal: nota,\n        empresa: empresa,\n        dataCompra: data,\n        launchDate: new Date().toISOString().substr(0, 19)\n      }, {\n        headers: {\n          authorization: \"Bearer \" + this.autorizacao.accessToken\n        }\n      }).then(function (response) {\n        if (response.status == 200) {\n          _this.$emit(\"cadastrarInstrumentos\"); ////console.log(\"compra cadastrada\");\n\n        } ////console.log(response.data);\n\n      }).catch(function (e) {\n        swal.fire(\"Sua autorização expirou!\", \"Entre com suas credencias novamente.\", \"warning\");\n\n        _this.$router.push(\"/\"); ////console.error(e);\n        ////console.data(e.data);\n\n      });\n    },\n    SemDataCompra: function SemDataCompra() {\n      this.com_data = !this.com_data;\n\n      if (this.com_data == false) {\n        this.data_compra = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\"Atenção!\", \"O instrumento não terá data de compra registrada!\", \"warning\");\n      } else {\n        this.data_compra = new Date().toISOString().substr(0, 10);\n      } ////console.log(this.data_compra);\n\n    },\n    SemNotaCompra: function SemNotaCompra() {\n      this.com_nota = !this.com_nota;\n\n      if (this.com_nota == false) {\n        this.notafiscal = this.descriçao_sem_nota;\n        swal.fire(\"Atenção!\", \"O instrumento não terá nota de compra registrada!\", \"warning\");\n      } else {\n        this.notafiscal = \"\";\n      } ////console.log(this.notafiscal);\n\n    },\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n\n      var _date$split = date.split(\"-\"),\n          _date$split2 = _slicedToArray(_date$split, 3),\n          year = _date$split2[0],\n          month = _date$split2[1],\n          day = _date$split2[2];\n\n      return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n    },\n    AtualizarEmpresas: function AtualizarEmpresas() {\n      var _this2 = this;\n\n      this.empresas = [];\n      var usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http.get(this.$url + \"Empresa/v1\", {\n        headers: {\n          authorization: \"Bearer \" + this.autorizacao.accessToken\n        }\n      }).then(function (response) {\n        //console.log(response.status);\n        if (response.status == 200) {\n          //console.log(\"request ok! \", new Date().toISOString().substr(0, 16));\n          response.data.forEach(function (element) {\n            //console.log(\"Pós cadastro\", element.nome);\n            _this2.empresas.push(element.nome);\n          }); //console.log(response.data);\n        } else if (response.status == 401) {} //console.log(response.data);\n\n      }).catch(function (e) {\n        swal.fire(\"Sua autorização expirou!\", \"Entre com suas credencias novamente.\", \"warning\");\n\n        _this2.$router.push(\"/\"); //console.error(e);\n        //console.data(e.data);\n        //console.error(e);\n        //console.data(e.data);\n\n      });\n    }\n  }\n};",{"version":3,"sources":["Cadastro_Compra_sem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container fluid grid-list-xl>\n    <v-layout align-center wrap>\n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-select\n          color=\"teal darken-3\"\n          :items=\"empresas\"\n          label=\"Empresa*\"\n          box\n          append-icon=\"fas fa-building\"\n          v-model=\"empresa\"\n          :rules=\"[() => !!empresa || 'Este campo precisa ser selecionado!']\"\n        ></v-select>\n      </v-flex>     \n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-dialog\n          ref=\"dialog_compra\"\n          v-model=\"modal_compra\"\n          :return-value.sync=\"data_compra\"\n          persistent\n          lazy\n          full-width\n          width=\"290px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"computedDateFormatted\"\n            label=\"Data da compra *\"\n            append-icon=\"event\"\n            readonly\n            color=\"teal darken-3\"\n            hint\n            persistent-hint\n            box\n          ></v-text-field>\n          <v-date-picker v-model=\"data_compra\" scrollable locale=\"pt-BR\">\n            <v-spacer></v-spacer>\n            <v-btn flat color=\"primary\" @click=\"modal_compra = false\">Cancelar</v-btn>\n            <v-btn flat color=\"primary\" @click=\"$refs.dialog_compra.save(data_compra)\">OK</v-btn>\n          </v-date-picker>\n        </v-dialog>\n      </v-flex>\n      <v-flex xs12 sm12 md6 lg6 d-flex>\n        <v-text-field\n          v-money=\"money\"\n          v-model.lazy=\"preco_instrumento\"\n          box\n          color=\"teal darken-3\"\n          append-icon=\"fas fa-hand-holding-usd\"\n          label=\"Valor do instrumento\"\n        ></v-text-field>\n      </v-flex>\n      <v-flex xs12 sm12 md6 lg6  d-flex>\n        <v-text-field\n          append-icon=\"fas fa-signature\"\n          v-model=\"nota_fiscal\"\n          box\n          color=\"teal darken-3\"\n          :hint=\"hint_nota\"\n          label=\"Nº da Nota Fiscal\"\n        ></v-text-field>\n      </v-flex>\n    </v-layout>\n      <cad-notap\n        v-on:cadastrarCompra=\"CadastrarCompra\"\n        v-bind:numero_tombamento=\"numero_do_instrumento\"\n        v-show=\"com_nota\"\n      ></cad-notap>   \n  </v-container>\n</template>\n\n<script type=\"text/babel\">\nimport swal from \"sweetalert2\";\nimport CadEmpresa from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro/Cadastro_Empresa\";\nimport CadNotap from \"@/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/NotaFiscal/CadastroNotaFiscalP\";\nimport { VMoney } from \"v-money\";\n\nexport default {\n  name: \"Cadastro_Empresa\",\n  components: {\n    CadEmpresa,\n    CadNotap\n  },\n  props: [\"numero_do_instrumento\"],\n  data() {\n    return {\n      money: {\n        decimal: \",\",\n        thousands: \".\",\n        prefix: \"R$ \",\n        suffix: \"\",\n        precision: 2,\n        masked: false /* doesn't work with directive */\n      },\n      com_data: true,\n      com_nota: true,\n      descriçao_sem_nota: \"sem nota fiscal.\",\n      dialog_compra: \"\",\n      modal_compra: false,\n      data_compra: new Date().toISOString().substr(0, 10),\n      origem_instrumento: \"\",\n      observacao_instrumento: \"\",\n      dialog: false,\n      empresas: [],\n      empresa: \"\",\n      nota_sem_definicao: \"\",\n      nota_fiscal: \"\",\n      preco_instrumento: 0.0,\n      data_compra: new Date().toISOString().substr(0, 10),\n      tombamento: \"\",\n      path_nota: \"\",\n      hint_nota: \"\"\n    };\n  },\n  directives: { money: VMoney },\n  created() {\n    this.AtualizarEmpresas();\n  },\n\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.data_compra);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.data_compra);\n    }\n  },\n  methods: {\n    NotaPath(payload) {\n      this.nota_path = payload.path;\n      ////console.log(this.nota_path.dbPath);\n      this.tombamento = this.numero_do_instrumento;\n    },\n    CadastrarCompra() {\n      let autorizacaoAux = sessionStorage.getItem(\"usuario\");\n      ////console.log(this.com_nota);\n      if (\n        (autorizacaoAux &&\n          this.com_nota == true &&\n          this.numero_do_instrumento != \"\" &&\n          this.nota_fiscal,\n        this.empresa != \"\" && this.data_compra != \"\")\n      ) {\n        this.autorizacao = JSON.parse(autorizacaoAux);\n        ////console.log(\"entrou no cadastro compra\");\n        ////console.log(this.preco_instrumento);\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else if (autorizacaoAux && com_nota == false) {\n        this.nota_fiscal = \"Não cadastrada\";\n        this.empresa = \"Não possui\";\n        this.salvarcompra(\n          this.preco_instrumento,\n          this.numero_do_instrumento,\n          this.nota_fiscal,\n          this.empresa,\n          this.data_compra\n        );\n      } else {\n        this.hint_nota = \"Campo em branco\";\n        swal.fire({\n          type: \"warning\",\n          title: \"Oops, verifique...\",\n          text: \"Tem algum campo obrigatório que ainda não foi selecionado!\"\n        });\n      }\n    },\n    salvarcompra(preco, tombamento, nota, empresa, data) {\n      this.$http\n        .post(\n          this.$url + \"CompraInstrumento/v1\",\n          {\n            id: 0,\n            valor: preco,\n            tombamento: tombamento,\n            notafiscal: nota,\n            empresa: empresa,\n            dataCompra: data,\n            launchDate: new Date().toISOString().substr(0, 19)\n          },\n          {\n            headers: {\n              authorization: \"Bearer \" + this.autorizacao.accessToken\n            }\n          }\n        )\n        .then(response => {\n          if (response.status == 200) {\n            this.$emit(\"cadastrarInstrumentos\");\n            ////console.log(\"compra cadastrada\");\n          }\n          ////console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          ////console.error(e);\n          ////console.data(e.data);\n        });\n    },\n    SemDataCompra() {\n      this.com_data = !this.com_data;\n      if (this.com_data == false) {\n        this.data_compra = new Date(1970, 0, 1).toISOString().substr(0, 10);\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá data de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.data_compra = new Date().toISOString().substr(0, 10);\n      }\n      ////console.log(this.data_compra);\n    },\n    SemNotaCompra() {\n      this.com_nota = !this.com_nota;\n      if (this.com_nota == false) {\n        this.notafiscal = this.descriçao_sem_nota;\n        swal.fire(\n          \"Atenção!\",\n          \"O instrumento não terá nota de compra registrada!\",\n          \"warning\"\n        );\n      } else {\n        this.notafiscal = \"\";\n      }\n      ////console.log(this.notafiscal);\n    },\n    formatDate(date) {\n      if (!date) return null;\n\n      const [year, month, day] = date.split(\"-\");\n      return `${day}/${month}/${year}`;\n    },\n    AtualizarEmpresas() {\n      this.empresas = [];\n      let usuarioAutorize = sessionStorage.getItem(\"usuario\");\n      this.autorizacao = JSON.parse(usuarioAutorize);\n      this.$http\n        .get(this.$url + \"Empresa/v1\", {\n          headers: { authorization: \"Bearer \" + this.autorizacao.accessToken }\n        })\n        .then(response => {\n          //console.log(response.status);\n          if (response.status == 200) {\n            //console.log(\"request ok! \", new Date().toISOString().substr(0, 16));\n            response.data.forEach(element => {\n              //console.log(\"Pós cadastro\", element.nome);\n              this.empresas.push(element.nome);\n            });\n\n            //console.log(response.data);\n          } else if (response.status == 401) {\n          }\n          //console.log(response.data);\n        })\n        .catch(e => {\n          swal.fire(\n            \"Sua autorização expirou!\",\n            \"Entre com suas credencias novamente.\",\n            \"warning\"\n          );\n          this.$router.push(\"/\");\n          //console.error(e);\n          //console.data(e.data);\n          //console.error(e);\n          //console.data(e.data);\n        });\n    }\n  }\n};\n</script>\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n"],"sourceRoot":"src/pages/Modulos/Patrimonio/CadastroInstrumento/Compra/Cadastro"}]}